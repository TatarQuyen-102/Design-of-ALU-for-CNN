$date
	Sun Mar 30 01:50:37 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_rsa $end
$var wire 1 ! Cout $end
$var wire 8 " Sum [7:0] $end
$var reg 8 # A [7:0] $end
$var reg 8 $ B [7:0] $end
$var reg 1 % Cin $end
$scope module dut $end
$var wire 8 & A [7:0] $end
$var wire 8 ' B [7:0] $end
$var wire 8 ( B_xor [7:0] $end
$var wire 1 ) Cin $end
$var wire 1 ! Cout $end
$var wire 8 * Sum [7:0] $end
$var wire 9 + carry [8:0] $end
$var wire 1 , carry_sign $end
$scope begin adder_stage[0] $end
$scope module FA $end
$var wire 1 - A $end
$var wire 1 . B $end
$var wire 1 / Cin $end
$var wire 1 0 Cout $end
$var wire 1 1 Sum $end
$upscope $end
$upscope $end
$scope begin adder_stage[1] $end
$scope module FA $end
$var wire 1 2 A $end
$var wire 1 3 B $end
$var wire 1 4 Cin $end
$var wire 1 5 Cout $end
$var wire 1 6 Sum $end
$upscope $end
$upscope $end
$scope begin adder_stage[2] $end
$scope module FA $end
$var wire 1 7 A $end
$var wire 1 8 B $end
$var wire 1 9 Cin $end
$var wire 1 : Cout $end
$var wire 1 ; Sum $end
$upscope $end
$upscope $end
$scope begin adder_stage[3] $end
$scope module FA $end
$var wire 1 < A $end
$var wire 1 = B $end
$var wire 1 > Cin $end
$var wire 1 ? Cout $end
$var wire 1 @ Sum $end
$upscope $end
$upscope $end
$scope begin adder_stage[4] $end
$scope module FA $end
$var wire 1 A A $end
$var wire 1 B B $end
$var wire 1 C Cin $end
$var wire 1 D Cout $end
$var wire 1 E Sum $end
$upscope $end
$upscope $end
$scope begin adder_stage[5] $end
$scope module FA $end
$var wire 1 F A $end
$var wire 1 G B $end
$var wire 1 H Cin $end
$var wire 1 I Cout $end
$var wire 1 J Sum $end
$upscope $end
$upscope $end
$scope begin adder_stage[6] $end
$scope module FA $end
$var wire 1 K A $end
$var wire 1 L B $end
$var wire 1 M Cin $end
$var wire 1 N Cout $end
$var wire 1 O Sum $end
$upscope $end
$upscope $end
$scope begin adder_stage[7] $end
$scope module FA $end
$var wire 1 P A $end
$var wire 1 Q B $end
$var wire 1 R Cin $end
$var wire 1 S Cout $end
$var wire 1 T Sum $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0T
1S
1R
1Q
0P
0O
1N
1M
1L
0K
0J
1I
1H
1G
0F
0E
1D
1C
1B
0A
0@
1?
1>
1=
0<
0;
1:
19
18
07
06
15
14
13
02
01
10
1/
0.
1-
1,
b111111111 +
b0 *
1)
b11111110 (
b1 '
b1 &
1%
b1 $
b1 #
b0 "
0!
$end
#10000
01
06
b0 "
b0 *
1.
03
b11111101 (
0-
12
b10 $
b10 '
b10 #
b10 &
#20000
0>
0:
1;
04
09
11
00
05
b111110001 +
06
0@
b101 "
b101 *
0.
b11111100 (
02
1<
b11 $
b11 '
b1000 #
b1000 &
#30000
0!
1,
1S
0T
1R
1N
0O
1M
1I
0J
1H
19
1D
15
0E
1C
1?
14
1>
0@
10
1:
b111111111 +
01
06
0;
b0 "
b0 *
08
0=
b11110000 (
1-
12
17
b1111 $
b1111 '
b1111 #
b1111 &
#40000
0H
0D
0C
0?
1@
0>
0:
09
05
04
00
b111000001 +
11
16
1;
1E
0J
b11111 "
b11111 *
13
18
0B
b11100110 (
0-
02
07
1A
1F
b11001 $
b11001 '
b111000 #
b111000 &
#50000
1C
1?
1>
1:
0;
19
15
06
14
10
0R
0,
0M
01
0O
0N
0T
0S
0I
0@
1E
0J
b10000 "
b10000 *
1.
1=
0G
0L
0Q
0/
0!
b1111 (
1-
0<
0A
0F
0%
b11110 +
0)
b1111 $
b1111 '
b1 #
b1 &
#60000
