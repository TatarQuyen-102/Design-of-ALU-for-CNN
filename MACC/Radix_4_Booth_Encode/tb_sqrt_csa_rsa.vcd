$date
	Sun Mar 30 03:03:20 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module tb_sqrt_csa_rsa $end
$var wire 10 ! Out [9:0] $end
$var reg 9 " A [8:0] $end
$var reg 9 # B [8:0] $end
$var reg 1 $ Cin $end
$scope module dut $end
$var wire 9 % A [8:0] $end
$var wire 9 & B [8:0] $end
$var wire 1 ' Cin $end
$var wire 10 ( Out [9:0] $end
$var wire 1 ) borrow_2bit $end
$var wire 1 * borrow_3bit $end
$var wire 3 + o_rsa_2bit [2:0] $end
$var wire 4 , o_rsa_3bit [3:0] $end
$var wire 4 - o_rsa_3bit_add [3:0] $end
$var wire 4 . o_rsa_3bit_sub [3:0] $end
$var wire 5 / o_rsa_4bit [4:0] $end
$var wire 5 0 o_rsa_4bit_add [4:0] $end
$var wire 5 1 o_rsa_4bit_sub [4:0] $end
$scope module rsa_2bit $end
$var wire 2 2 A [1:0] $end
$var wire 2 3 B [1:0] $end
$var wire 2 4 B_xor [1:0] $end
$var wire 1 ' Cin $end
$var wire 1 5 Cout $end
$var wire 2 6 Sum [1:0] $end
$var wire 3 7 carry [2:0] $end
$var wire 1 8 carry_sign $end
$scope begin adder_stage[0] $end
$scope module FA $end
$var wire 1 9 A $end
$var wire 1 : B $end
$var wire 1 ; Cin $end
$var wire 1 < Cout $end
$var wire 1 = Sum $end
$upscope $end
$upscope $end
$scope begin adder_stage[1] $end
$scope module FA $end
$var wire 1 > A $end
$var wire 1 ? B $end
$var wire 1 @ Cin $end
$var wire 1 A Cout $end
$var wire 1 B Sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module rsa_3bit_add $end
$var wire 3 C A [2:0] $end
$var wire 3 D B [2:0] $end
$var wire 3 E B_xor [2:0] $end
$var wire 1 F Cin $end
$var wire 1 G Cout $end
$var wire 3 H Sum [2:0] $end
$var wire 4 I carry [3:0] $end
$var wire 1 J carry_sign $end
$scope begin adder_stage[0] $end
$scope module FA $end
$var wire 1 K A $end
$var wire 1 L B $end
$var wire 1 M Cin $end
$var wire 1 N Cout $end
$var wire 1 O Sum $end
$upscope $end
$upscope $end
$scope begin adder_stage[1] $end
$scope module FA $end
$var wire 1 P A $end
$var wire 1 Q B $end
$var wire 1 R Cin $end
$var wire 1 S Cout $end
$var wire 1 T Sum $end
$upscope $end
$upscope $end
$scope begin adder_stage[2] $end
$scope module FA $end
$var wire 1 U A $end
$var wire 1 V B $end
$var wire 1 W Cin $end
$var wire 1 X Cout $end
$var wire 1 Y Sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module rsa_3bit_sub $end
$var wire 3 Z A [2:0] $end
$var wire 3 [ B [2:0] $end
$var wire 3 \ B_xor [2:0] $end
$var wire 1 ] Cin $end
$var wire 1 ^ Cout $end
$var wire 3 _ Sum [2:0] $end
$var wire 4 ` carry [3:0] $end
$var wire 1 a carry_sign $end
$scope begin adder_stage[0] $end
$scope module FA $end
$var wire 1 b A $end
$var wire 1 c B $end
$var wire 1 d Cin $end
$var wire 1 e Cout $end
$var wire 1 f Sum $end
$upscope $end
$upscope $end
$scope begin adder_stage[1] $end
$scope module FA $end
$var wire 1 g A $end
$var wire 1 h B $end
$var wire 1 i Cin $end
$var wire 1 j Cout $end
$var wire 1 k Sum $end
$upscope $end
$upscope $end
$scope begin adder_stage[2] $end
$scope module FA $end
$var wire 1 l A $end
$var wire 1 m B $end
$var wire 1 n Cin $end
$var wire 1 o Cout $end
$var wire 1 p Sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module rsa_4bit_add $end
$var wire 4 q A [3:0] $end
$var wire 4 r B [3:0] $end
$var wire 4 s B_xor [3:0] $end
$var wire 1 t Cin $end
$var wire 1 u Cout $end
$var wire 4 v Sum [3:0] $end
$var wire 5 w carry [4:0] $end
$var wire 1 x carry_sign $end
$scope begin adder_stage[0] $end
$scope module FA $end
$var wire 1 y A $end
$var wire 1 z B $end
$var wire 1 { Cin $end
$var wire 1 | Cout $end
$var wire 1 } Sum $end
$upscope $end
$upscope $end
$scope begin adder_stage[1] $end
$scope module FA $end
$var wire 1 ~ A $end
$var wire 1 !" B $end
$var wire 1 "" Cin $end
$var wire 1 #" Cout $end
$var wire 1 $" Sum $end
$upscope $end
$upscope $end
$scope begin adder_stage[2] $end
$scope module FA $end
$var wire 1 %" A $end
$var wire 1 &" B $end
$var wire 1 '" Cin $end
$var wire 1 (" Cout $end
$var wire 1 )" Sum $end
$upscope $end
$upscope $end
$scope begin adder_stage[3] $end
$scope module FA $end
$var wire 1 *" A $end
$var wire 1 +" B $end
$var wire 1 ," Cin $end
$var wire 1 -" Cout $end
$var wire 1 ." Sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module rsa_4bit_sub $end
$var wire 4 /" A [3:0] $end
$var wire 4 0" B [3:0] $end
$var wire 4 1" B_xor [3:0] $end
$var wire 1 2" Cin $end
$var wire 1 3" Cout $end
$var wire 4 4" Sum [3:0] $end
$var wire 5 5" carry [4:0] $end
$var wire 1 6" carry_sign $end
$scope begin adder_stage[0] $end
$scope module FA $end
$var wire 1 7" A $end
$var wire 1 8" B $end
$var wire 1 9" Cin $end
$var wire 1 :" Cout $end
$var wire 1 ;" Sum $end
$upscope $end
$upscope $end
$scope begin adder_stage[1] $end
$scope module FA $end
$var wire 1 <" A $end
$var wire 1 =" B $end
$var wire 1 >" Cin $end
$var wire 1 ?" Cout $end
$var wire 1 @" Sum $end
$upscope $end
$upscope $end
$scope begin adder_stage[2] $end
$scope module FA $end
$var wire 1 A" A $end
$var wire 1 B" B $end
$var wire 1 C" Cin $end
$var wire 1 D" Cout $end
$var wire 1 E" Sum $end
$upscope $end
$upscope $end
$scope begin adder_stage[3] $end
$scope module FA $end
$var wire 1 F" A $end
$var wire 1 G" B $end
$var wire 1 H" Cin $end
$var wire 1 I" Cout $end
$var wire 1 J" Sum $end
$upscope $end
$upscope $end
$upscope $end
$scope module mux_4bit $end
$var wire 4 K" In0 [3:0] $end
$var wire 4 L" In1 [3:0] $end
$var wire 4 M" Out [3:0] $end
$var wire 1 ) Sel $end
$upscope $end
$scope module mux_5bit $end
$var wire 5 N" In0 [4:0] $end
$var wire 5 O" In1 [4:0] $end
$var wire 5 P" Out [4:0] $end
$var wire 1 * Sel $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 P"
b0 O"
b0 N"
b0 M"
b0 L"
b0 K"
0J"
1I"
1H"
1G"
0F"
0E"
1D"
1C"
1B"
0A"
0@"
1?"
1>"
1="
0<"
0;"
1:"
19"
18"
07"
16"
b11111 5"
b0 4"
03"
12"
b1111 1"
b0 0"
b0 /"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
0$"
0#"
0""
0!"
0~
0}
0|
0{
0z
0y
0x
b0 w
b0 v
0u
0t
b0 s
b0 r
b0 q
0p
1o
1n
1m
0l
0k
1j
1i
1h
0g
0f
1e
1d
1c
0b
1a
b1111 `
b0 _
0^
1]
b111 \
b0 [
b0 Z
0Y
0X
0W
0V
0U
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
b0 I
b0 H
0G
0F
b0 E
b0 D
b0 C
1B
0A
1@
0?
0>
0=
1<
0;
1:
19
08
b10 7
b10 6
05
b1 4
b1 3
b1 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b10 +
0*
0)
b10 (
0'
b1 &
b1 %
0$
b1 #
b1 "
b10 !
$end
#10000
1)
15
0@
18
0<
b1 !
b1 (
1A
b100 7
1=
0B
b101 +
b1 6
1?
b11 4
09
1>
b11 3
b10 2
b11 #
b11 &
b10 "
b10 %
#20000
1B
1@
b110 !
b110 (
1<
b110 7
b1 ,
b1 M"
0=
b110 +
b10 6
1O
b1 -
b1 K"
b1 H
1f
b1 .
b1 L"
b1 _
19
1K
1b
b11 2
b1 C
b1 Z
b111 "
b111 %
#30000
0B
0@
08
0<
0A
b101 !
b101 (
1)
1=
b1 6
0:
0?
09
0>
1;
15
b101 +
b0 4
b0 2
1$
1'
b1 7
b100 "
b100 %
#40000
0)
05
18
1A
1@
0n
b11000 !
b11000 (
0=
1<
b111 7
0B
b0 +
b0 6
1T
1k
0j
b1011 `
b110 ,
b110 M"
0O
1Y
b110 -
b110 K"
b110 H
0f
0p
b10 .
b10 L"
b10 _
1:
1?
1Q
0h
b11 4
b10 E
b101 \
0K
1U
0b
1l
b0 3
b10 D
b10 [
b100 C
b100 Z
b1000 #
b1000 &
b10000 "
b10000 %
#50000
0G
0J
0X
18
1A
1Y
1p
0W
1n
0B
0S
b0 I
1j
b1111 `
b1111 /
b1111 P"
1@
b111 ,
b111 M"
1O
1T
b111 -
b111 K"
b111 H
1f
1k
b111 .
b111 L"
b111 _
1}
1$"
1)"
1."
b1111 0
b1111 N"
b1111 v
1;"
1@"
1E"
1J"
b1111 1
b1111 O"
b1111 4"
b111111100 !
b111111100 (
1<
1)
0Q
1h
0=
b0 6
0?
b0 E
b111 \
19
1>
1K
1P
1b
1g
1y
1~
1%"
1*"
17"
1<"
1A"
1F"
0;
15
b100 +
b1 4
b1 3
b0 D
b0 [
b11 2
b111 C
b111 Z
b1111 q
b1111 /"
0$
0'
b110 7
b1 #
b1 &
b111111111 "
b111111111 %
#60000
08
0A
1B
0@
0<
b0 /
b0 P"
b0 ,
b0 M"
0O
0T
0Y
b0 -
b0 K"
b0 H
0f
0k
0p
b0 .
b0 L"
b0 _
0}
0$"
0)"
0."
b0 0
b0 N"
b0 v
0;"
0@"
0E"
0J"
b0 1
b0 O"
b0 4"
b11 !
b11 (
1)
1=
b11 6
0:
1?
09
0>
0K
0P
0U
0b
0g
0l
0y
0~
0%"
0*"
07"
0<"
0A"
0F"
1;
15
b111 +
b10 4
b0 2
b0 C
b0 Z
b0 q
b0 /"
1$
1'
b1 7
b0 "
b0 %
#70000
1^
0i
0a
0>"
1O
1Y
1f
0e
1p
0o
b101 `
1}
1;"
0:"
b11101 5"
b11 /
b11 P"
b111 ,
b111 M"
1T
b111 -
b111 K"
b111 H
0k
b1101 .
b1101 L"
b101 _
1$"
b11 0
b11 N"
b11 v
0@"
b1 1
b1 O"
b1 4"
b1111111 !
b1111111 (
0)
1L
1V
0c
0m
1z
08"
1=
b11 6
b101 E
b10 \
b1 s
b1110 1"
19
1P
1g
1~
1<"
0;
05
b11 +
b10 3
b101 D
b101 [
b1 r
b1 0"
b1 2
b10 C
b10 Z
b10 q
b10 /"
0$
0'
b0 7
b110110 #
b110110 &
b1001001 "
b1001001 %
#80000
03"
16"
1I"
0J"
1H"
18
1D"
1A
0^
0E"
0B
0*
1i
1a
1>"
1n
1C"
1@
0O
0Y
0f
1e
0p
1o
0}
0;"
1:"
1j
b1111 `
b0 /
b0 P"
1?"
b11111 5"
1<
b0 ,
b0 M"
0T
b0 -
b0 K"
b0 H
0k
b0 .
b0 L"
b0 _
0$"
b0 0
b0 N"
b0 v
0@"
b0 1
b0 O"
b0 4"
b0 !
b0 (
0)
0L
0V
1c
1m
0z
18"
0=
b0 6
b0 E
b111 \
b0 s
b1111 1"
0P
0g
0~
0<"
1;
05
b0 +
b1 3
b0 D
b0 [
b0 r
b0 0"
b0 C
b0 Z
b0 q
b0 /"
1$
1'
b111 7
b1 #
b1 &
b1 "
b1 %
#90000
b0 !
b0 (
0=
0B
b0 +
b0 6
1:
0?
b1 4
09
1>
b10 3
b10 2
b10 #
b10 &
b10 "
b10 %
#100000
08
0A
1B
0@
b10 ,
b10 M"
1T
b10 -
b10 K"
b10 H
1k
b10 .
b10 L"
b10 _
b1011 !
b1011 (
0<
0)
1=
b11 6
1?
0>
1P
1g
0;
05
b11 +
b11 4
b11 3
b0 2
b10 C
b10 Z
0$
0'
b0 7
b11 #
b11 &
b1000 "
b1000 %
#110000
18
1A
1Y
1R
1W
0B
1N
1S
b110 I
1@
1T
0k
1<
b110 ,
b110 M"
0O
b110 -
b110 K"
b110 H
0f
b0 .
b0 L"
b0 _
b11000 !
b11000 (
0)
1L
1Q
0c
0h
0=
b0 6
0:
0?
b11 E
b100 \
19
1>
1K
1b
1;
05
b0 +
b0 4
b11 D
b11 [
b11 2
b11 C
b11 Z
1$
1'
b111 7
b1111 #
b1111 &
b1111 "
b1111 %
#120000
1)
15
0*
08
0A
0T
1G
0@
0R
1J
0<
b1 7
0N
b0 ,
b0 M"
1X
b1100 I
b100011 !
b100011 (
b1 /
b1 P"
1=
1B
b111 +
b11 6
0O
1Y
b1100 -
b1100 K"
b100 H
0f
0p
b0 .
b0 L"
b0 _
1}
b1 0
b1 N"
b1 v
1;"
b1 1
b1 O"
b1 4"
1?
0L
1V
1c
0m
b10 4
b110 E
b1 \
09
0>
0K
1U
0b
1l
1y
17"
b1 3
b110 D
b110 [
b0 2
b110 C
b110 Z
b1 q
b1 /"
b11001 #
b11001 &
b111000 "
b111000 %
#130000
