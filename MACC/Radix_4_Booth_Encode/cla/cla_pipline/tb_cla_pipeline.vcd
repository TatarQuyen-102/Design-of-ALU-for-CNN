$date
	Sat Apr 12 12:01:35 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module cla_tb $end
$var wire 16 ! As [15:0] $end
$var wire 16 " Bs [15:0] $end
$var wire 1 # Cout $end
$var wire 16 $ Ss [15:0] $end
$var wire 16 % Sum [15:0] $end
$var reg 16 & A [15:0] $end
$var reg 16 ' B [15:0] $end
$var reg 1 ( Cin $end
$var reg 1 ) clk $end
$scope module cla_inst $end
$var wire 16 * A [15:0] $end
$var wire 16 + B [15:0] $end
$var wire 16 , B_xor [15:0] $end
$var wire 1 - Cin $end
$var wire 1 . Cout_comb $end
$var wire 16 / Sum_comb [15:0] $end
$var wire 4 0 carry [3:0] $end
$var wire 1 1 carry_sign $end
$var wire 1 2 clk $end
$var reg 16 3 A_reg [15:0] $end
$var reg 16 4 B_reg [15:0] $end
$var reg 1 5 Cin_reg $end
$var reg 1 6 Cout $end
$var reg 16 7 Sum [15:0] $end
$scope begin cla_block[0] $end
$scope module cla_inst $end
$var wire 4 8 A [3:0] $end
$var wire 4 9 B [3:0] $end
$var wire 1 : Cin $end
$var wire 1 ; Cout $end
$var wire 4 < Sum [3:0] $end
$upscope $end
$upscope $end
$scope begin cla_block[1] $end
$scope module cla_inst $end
$var wire 4 = A [3:0] $end
$var wire 4 > B [3:0] $end
$var wire 1 ? Cin $end
$var wire 1 @ Cout $end
$var wire 4 A Sum [3:0] $end
$upscope $end
$upscope $end
$scope begin cla_block[2] $end
$scope module cla_inst $end
$var wire 4 B A [3:0] $end
$var wire 4 C B [3:0] $end
$var wire 1 D Cin $end
$var wire 1 E Cout $end
$var wire 4 F Sum [3:0] $end
$upscope $end
$upscope $end
$scope begin cla_block[3] $end
$scope module cla_inst $end
$var wire 4 G A [3:0] $end
$var wire 4 H B [3:0] $end
$var wire 1 I Cin $end
$var wire 1 J Cout $end
$var wire 4 K Sum [3:0] $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx K
xJ
xI
bx H
bx G
bx F
xE
xD
bx C
bx B
bx A
x@
x?
bx >
bx =
bx <
x;
x:
bx 9
bx 8
bx 7
x6
x5
bx 4
bx 3
02
x1
bx 0
bx /
x.
x-
bx ,
bx +
bx *
0)
x(
bx '
bx &
bx %
bx $
x#
bx "
bx !
$end
#1000
0(
0-
b10100 '
b10100 +
b10100 "
b1010 &
b1010 *
b1010 !
#5000
0?
0;
0.
b1 A
0D
b0 F
0I
b0 K
01
0@
0E
0J
b0 0
b11110 /
b1110 <
b100 9
b1 >
b0 C
b0 H
b10100 ,
b1010 8
b0 =
b0 B
b0 G
05
0:
b10100 4
b1010 3
1)
12
#10000
0)
02
#15000
06
0#
b11110 7
b11110 %
b11110 $
1)
12
#20000
0)
02
#21000
b1000011100001 '
b1000011100001 +
b1000011100001 "
b10011010010 &
b10011010010 *
b10011010010 !
#25000
1D
1@
b10 0
b1 K
b11 <
b1011 A
b1010110110011 /
b101 F
b1 9
b1110 >
b1 H
b1000011100001 ,
b10 8
b1101 =
b100 B
b1000011100001 4
b10011010010 3
1)
12
#30000
0)
02
#35000
b1010110110011 7
b1010110110011 %
b1010110110011 $
1)
12
#40000
0)
02
#41000
1(
1-
b101 '
b101 +
b101 "
b1111111111110001 &
b1111111111110001 *
b1111111111110001 !
#45000
1I
11
1E
1J
b1110 0
b1110 A
b1111 F
b1111 K
b1010 9
b1111 >
b1111 C
b1111 H
b1111111111101100 /
b1100 <
0.
b1111111111111010 ,
b1 8
b1111 =
b1111 B
b1111 G
15
1:
b101 4
b1111111111110001 3
1)
12
#50000
0)
02
#55000
b1111111111101100 7
b1111111111101100 %
b1111111111101100 $
1)
12
#60000
0)
02
#61000
0(
0-
b110010 '
b110010 +
b110010 "
b1111111110011100 &
b1111111110011100 *
b1111111110011100 !
#65000
01
0J
0I
0E
0D
0@
b1111 F
b1111 K
0?
0;
b0 0
b1100 A
b10 9
b11 >
b0 C
b0 H
b1111111111001110 /
b1110 <
0.
b110010 ,
b1100 8
b1001 =
05
0:
b110010 4
b1111111110011100 3
1)
12
#70000
0)
02
#75000
b1111111111001110 7
b1111111111001110 %
b1111111111001110 $
1)
12
#80000
0)
02
#81000
b1111111111110110 '
b1111111111110110 +
b1111111111110110 "
b11110 &
b11110 *
b11110 !
#85000
1.
11
1J
1I
1E
1D
1?
1@
1;
b1111 0
b100 <
b1 A
b0 F
b10100 /
b0 K
b110 9
b1111 >
b1111 C
b1111 H
b1111111111110110 ,
b1110 8
b1 =
b0 B
b0 G
b1111111111110110 4
b11110 3
1)
12
#90000
0)
02
#95000
16
1#
b10100 7
b10100 %
b10100 $
1)
12
#100000
0)
02
#101000
1(
1-
b1111111111111000 '
b1111111111111000 +
b1111111111111000 "
b101 &
b101 *
b101 !
#105000
0D
0I
01
0@
0E
0J
0?
b0 F
b0 K
0;
b0 0
b0 A
b111 9
b0 >
b0 C
b0 H
b1101 /
b1101 <
1.
b111 ,
b101 8
b0 =
15
1:
b1111111111111000 4
b101 3
1)
12
#110000
0)
02
#115000
b1101 7
b1101 %
b1101 $
1)
12
#120000
0)
02
#121000
b1111111111110001 '
b1111111111110001 +
b1111111111110001 "
b1111111111100111 &
b1111111111100111 *
b1111111111100111 !
#125000
1?
1;
b1 0
b110 <
b1111 A
b1111 F
b1111111111110110 /
b1111 K
b1110 9
b1110 ,
b111 8
b1110 =
b1111 B
b1111 G
b1111111111110001 4
b1111111111100111 3
1)
12
#130000
0)
02
#135000
b1111111111110110 7
b1111111111110110 %
b1111111111110110 $
1)
12
#140000
0)
02
#141000
0(
0-
b1 '
b1 +
b1 "
b111111111111111 &
b111111111111111 *
b111111111111111 !
#145000
1I
1E
b0 F
1D
1@
1?
1;
b111 0
b0 A
b1000 K
b1 9
b1000000000000000 /
b0 <
0.
b1 ,
b1111 8
b1111 =
b111 G
05
0:
b1 4
b111111111111111 3
1)
12
#150000
0)
02
#155000
06
0#
b1000000000000000 7
b1000000000000000 %
b1000000000000000 $
1)
12
#160000
0)
02
#161000
b1111111111111111 '
b1111111111111111 +
b1111111111111111 "
b1000000000000000 &
b1000000000000000 *
b1000000000000000 !
#165000
1.
0?
0D
0I
11
0;
0@
0E
1J
b1000 0
b1111 <
b1111 A
b1111 F
b111111111111111 /
b111 K
b1111 9
b1111 >
b1111 C
b1111 H
b1111111111111111 ,
b0 8
b0 =
b0 B
b1000 G
b1111111111111111 4
b1000000000000000 3
1)
12
#170000
0)
02
#175000
16
1#
b111111111111111 7
b111111111111111 %
b111111111111111 $
1)
12
#180000
0)
02
#185000
1)
12
#190000
0)
02
#195000
1)
12
#200000
0)
02
#201000
